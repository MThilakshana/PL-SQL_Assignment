CREATE OR REPLACE PACKAGE BODY MADURA_CONTAINER_API AS

  -- procedure for insert data
  PROCEDURE insert_data(container_id_     IN NUMBER DEFAULT NULL,
                        container_weight_ IN NUMBER,
                        max_volume_       IN NUMBER,
                        max_weight_       IN NUMBER,
                        current_volume_   IN NUMBER,
                        current_weight_   IN NUMBER,
                        branch_id_        IN VARCHAR2) IS
    new_container_id_ NUMBER;
  BEGIN
    IF container_id_ IS NOT NULL THEN
      new_container_id_ := container_id_;
    ELSE
      SELECT container_sequence.NEXTVAL INTO new_container_id_ FROM DUAL;
    END IF;
    INSERT INTO madura_container_tab
      (container_id,
       container_weight,
       max_volume,
       max_weight,
       current_volume,
       current_weight,
       branch_id)
    VALUES
      (new_container_id_,
       container_weight_,
       max_volume_,
       max_weight_,
       current_volume_,
       current_weight_,
       branch_id_);
  END insert_data;
  
  -- procedure for update data
  PROCEDURE update_data(container_id_     IN NUMBER,
                        container_weight_ IN NUMBER,
                        max_volume_       IN NUMBER,
                        max_weight_       IN NUMBER,
                        current_volume_   IN NUMBER,
                        current_weight_   IN NUMBER,
                        branch_id_        IN VARCHAR2) IS
			BEGIN 
				UPDATE TABLE madura_container_tab
				SET container_weight = container_weight_,
					max_volume = max_volume_,
					max_weight = max_weight_,
					current_volume = current_volume_,
					current_weight = current_weight_,
					branch_id = branch_id_)
				WHERE container_id = container_id_;
  END update_data;
  
  -- procedure for delete data
  PROCEDURE delete_data(container_id_ IN NUMBER) IS
	BEGIN	
		DELETE FROM madura_container_tab WHERE container_id = container_id_;
	END delete_data;

  -- function for get container weight
  FUNCTION GET_CONTAINER_WEIGHT(CONTAINER_ID_ IN NUMBER) RETURN NUMBER IS
    result_ NUMBER;
  
    CURSOR get_cont_weight IS
      SELECT container_weight
        FROM madura_container_tab
       WHERE CONTAINER_ID = CONTAINER_ID_;
  BEGIN
    OPEN get_cont_weight;
    FETCH get_cont_weight
      INTO result_;
    CLOSE get_cont_weight;
    RETURN result_;
  END GET_CONTAINER_WEIGHT;
  
  -- function for get max volume
  FUNCTION GET_CONTAINER_MAX_VOLUME(CONTAINER_ID_ IN VARCHAR2) RETURN NUMBER IS
    result_ NUMBER;
  
    CURSOR get_max_volume IS
      SELECT max_volume
        FROM madura_container_tab
       WHERE CONTAINER_ID = CONTAINER_ID_;
  BEGIN
    OPEN get_max_volume;
    FETCH get_max_volume
      INTO result_;
    CLOSE get_max_volume;
    RETURN result_;
  END GET_CONTAINER_MAX_VOLUME;
  
  -- function for get max weight
  FUNCTION GET_MAX_WEIGHT(CONTAINER_ID_ IN NUMBER) RETURN NUMBER IS
    result_ NUMBER;
  
    CURSOR get_max_wgt IS
      SELECT max_weight
        FROM madura_container_tab
       WHERE CONTAINER_ID = CONTAINER_ID_;
  BEGIN
    OPEN get_max_wgt;
    FETCH get_max_wgt
      INTO result_;
    CLOSE get_max_wgt;
    RETURN result_;
  END GET_MAX_WEIGHT;
  
  -- function for get current volume
  FUNCTION GET_CURRENT_VOLUME(CONTAINER_ID_ IN VARCHAR2) RETURN NUMBER IS
    result_ NUMBER;
  
    CURSOR get_cur_volume IS
      SELECT current_volume
        FROM madura_container_tab
       WHERE CONTAINER_ID = CONTAINER_ID_;
  BEGIN
    OPEN get_cur_volume;
    FETCH get_cur_volume
      INTO result_;
    CLOSE get_cur_volume;
    RETURN result_;
  END GET_CURRENT_VOLUME;
  
  -- function for get current weight
  FUNCTION GET_CURRENT_WEIGHT(CONTAINER_ID_ IN NUMBER) RETURN NUMBER IS
    result_ NUMBER;
  
    CURSOR get_cur_wgt IS
      SELECT current_weight
        FROM madura_container_tab
       WHERE CONTAINER_ID = CONTAINER_ID_;
  BEGIN
    OPEN get_cur_wgt;
    FETCH get_cur_wgt
      INTO result_;
    CLOSE get_cur_wgt;
    RETURN result_;
  END GET_CURRENT_WEIGHT;
  
  -- function for get branch id
  FUNCTION GET_BRANCH_ID(CONTAINER_ID_ IN NUMBER) RETURN VARCHAR2 IS
    result_ VARCHAR2(100);
  
    CURSOR get_brnch_id IS
      SELECT branch_id
        FROM madura_container_tab
       WHERE CONTAINER_ID = CONTAINER_ID_;
  BEGIN
    OPEN get_brnch_id;
    FETCH get_brnch_id
      INTO result_;
    CLOSE get_brnch_id;
    RETURN result_;
  END GET_BRANCH_ID;

END MADURA_CONTAINER_API;
/